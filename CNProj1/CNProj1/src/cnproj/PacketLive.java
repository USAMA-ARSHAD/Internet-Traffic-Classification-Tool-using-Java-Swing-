/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cnproj;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;
import jpcap.packet.Packet;
import java.io.BufferedReader;
import java.io.Console;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.util.ArrayList;
import java.util.Arrays;
import jpcap.packet.Packet;
import jpcap.JpcapCaptor;
import jpcap.JpcapSender;
import jpcap.JpcapWriter;
import jpcap.NetworkInterface;
import jpcap.NetworkInterfaceAddress;
import jpcap.packet.*;
import jpcap.packet.TCPPacket;
/**
 *
 * @author Mairaj
 */
public class PacketLive extends javax.swing.JFrame {

    /**
     * Creates new form PacketsLive
     */
    static public int count =-1;
    static int max_packets = -1;
    static int current = 0;
    private NetworkInterface [] networkInterfaces;
    private JpcapCaptor cap;
    ArrayList<Packet> packets = new ArrayList<>();
    boolean option ;
    Output outputThread;
    int index;
    public PacketLive(int index){
        this.index = index;
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        networkInterfaces = JpcapCaptor.getDeviceList();
        try {
            cap = JpcapCaptor.openDevice(networkInterfaces[index], 65535, true, 20);
        } catch (IOException ex) {
            Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        output.setEditable(false);
    }
    public PacketLive() {
        this.index = index;
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        networkInterfaces = JpcapCaptor.getDeviceList();
        try {
            cap = JpcapCaptor.openDevice(networkInterfaces[index], 65535, true, 20);
        } catch (IOException ex) {
            Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        output.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PacketLive = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Capture = new javax.swing.JButton();
        Pause = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        Clear = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filter = new javax.swing.JTextField();
        Apply = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(17, 17, 17));

        Capture.setBackground(new java.awt.Color(0, 0, 0));
        Capture.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Capture.setForeground(new java.awt.Color(73, 197, 221));
        Capture.setText("Capture");
        Capture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CaptureMouseClicked(evt);
            }
        });

        Pause.setBackground(new java.awt.Color(0, 0, 0));
        Pause.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Pause.setForeground(new java.awt.Color(169, 5, 4));
        Pause.setText("Pause");
        Pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PauseMouseClicked(evt);
            }
        });

        output.setBackground(new java.awt.Color(31, 31, 31));
        output.setColumns(20);
        output.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        output.setForeground(new java.awt.Color(187, 134, 252));
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        Clear.setBackground(new java.awt.Color(0, 0, 0));
        Clear.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        Clear.setForeground(new java.awt.Color(225, 225, 225));
        Clear.setText("Clear");
        Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearMouseClicked(evt);
            }
        });

        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });

        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
        });

        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });

        jRadioButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton4MouseClicked(evt);
            }
        });

        jRadioButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton5MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(108, 84, 148));
        jLabel1.setText("(HTTP,HTTPs,DNS,FTP,VOIP)");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(108, 84, 148));
        jLabel2.setText("Custom Filter");

        filter.setBackground(new java.awt.Color(31, 31, 31));
        filter.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        filter.setForeground(new java.awt.Color(187, 134, 252));

        Apply.setBackground(new java.awt.Color(0, 0, 0));
        Apply.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        Apply.setForeground(new java.awt.Color(222, 135, 255));
        Apply.setText("Apply");
        Apply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApplyMouseClicked(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(31, 31, 31));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(187, 134, 252));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(108, 84, 148));
        jLabel3.setText("# of Packets");

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(222, 135, 255));
        jButton2.setText("Apply");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(108, 84, 148));
        jLabel4.setText("Enter Packet #");

        jTextField2.setBackground(new java.awt.Color(31, 31, 31));
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(187, 134, 252));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(222, 135, 255));
        jButton1.setText("Display Packet");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 54)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(108, 84, 148));
        jLabel5.setText("LIVE PACKET CAPTURE");

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(222, 135, 255));
        jButton3.setText("CHANGE INTERFACE");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(222, 135, 255));
        jButton4.setText("Save");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(222, 135, 255));
        jButton5.setText("Load");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Capture, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Pause, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jRadioButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jRadioButton3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jRadioButton2)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jRadioButton4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Apply, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)))
                            .addComponent(jLabel5))
                        .addGap(0, 164, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel5)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Capture, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Pause, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRadioButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Apply, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(114, 114, 114))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout PacketLiveLayout = new javax.swing.GroupLayout(PacketLive);
        PacketLive.setLayout(PacketLiveLayout);
        PacketLiveLayout.setHorizontalGroup(
            PacketLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PacketLiveLayout.setVerticalGroup(
            PacketLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PacketLive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PacketLive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String getPacketText(Packet pack){
           int i=0,j=0;
           byte[] bytes=new byte[pack.header.length + pack.data.length];

              System.arraycopy(pack.header, 0, bytes, 0, pack.header.length);
              System.arraycopy(pack.data, 0, bytes, pack.header.length, pack.data.length);
              StringBuffer buffer = new StringBuffer();

              for(i=0; i<bytes.length;) {
                  for(j=0;j<8 && i<bytes.length;j++,i++) {
                      String d = Integer.toHexString((int)(bytes [i] &0xff));
                      buffer.append((d.length() == 1 ? "0" + d:d ) + " ");

                  if(bytes[i]<32 || bytes[i]>126)
                      bytes[i] = 46;
                     }
           }
               return new String(bytes,i - j, j);
           }
    String udpPacketExtraction(UDPPacket pac){
        
        String src_port = String.valueOf( pac.src_port);
        String data_length =  String.valueOf( pac.length);
        String dest_port = String.valueOf( pac.dst_port);
        String data = Arrays.toString(pac.data);
        StringBuilder sb = new StringBuilder();
        for (byte byt : pac.data) {
            sb.append(String.format("%02X ", byt));
        }
    
        return "\nSource Port # : "+src_port
                +"\nDest Port Name : "+dest_port
                +"\nData Length : "+data_length
                +"\nData : "+ sb.toString();
    }
    String TCPPacketExtraction(TCPPacket pac){
        
        
        String src_port = String.valueOf( pac.src_port);
        String header_length = String.valueOf( pac.len);
        String sequence_no = String.valueOf(pac.sequence);
        String ack_num = String.valueOf( pac.ack_num);
        String window_size = String.valueOf( pac.window);
        String dest_port = String.valueOf( pac.dst_port);
        String urgent_pointer= String.valueOf( pac.urgent_pointer);
        
        String ack = pac.ack?"1":"0";
        String urg = pac.urg?"1":"0";
        String psh = pac.psh?"1":"0";
        String rst = pac.rst?"1":"0";
        String syn = pac.syn?"1":"0";
        String fin = pac.fin?"1":"0";
        
        StringBuilder sb = new StringBuilder();
        for (byte bytee : pac.data) {
            sb.append(String.format("%02X ", bytee));
        }
        
        
        return  "\nSource Port # : "+src_port
                +"\nDest Port Name : "+dest_port
                +"\nSequence No : "+sequence_no
                +"\nAcknowledgement No : "+ack_num
                +"\nWindow Size : "+window_size
                +"\nFlag Bits : ACK: "+ack+" URG: "+urg+" PSH: "+psh+" RST: "+rst
                +" SYN: "+syn+" FIN: "+fin
                +"\nUrgent Pointer : "+urgent_pointer
                +"\nHeader Length : "+header_length
                +"\nData : "+ sb.toString();
    }
    private void CaptureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CaptureMouseClicked
        // TODO add your handling code here:
        option = true;
        outputThread = new Output(){
            @Override
            public Object construct(){
                
                while(option==true && ( current>0 || max_packets==-1) ){
                    Packet p = cap.getPacket();
                    
                     if (p!=null){
                        //System.out.println(getPacketText(p));
                        packets.add(p);
                        output.append("Packet No : "+Integer.toString(count+1)
                                +"  "+p.toString()+"\n");
                        current--;
                        count++;
                    }
                }
                return 0;
            }
            @Override
            public void finished(){
                this.interrupt();
            }
        };
        outputThread.start();

    }//GEN-LAST:event_CaptureMouseClicked

    private void PauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PauseMouseClicked
        // TODO add your handling code here:
        option = false;      
    }//GEN-LAST:event_PauseMouseClicked

    private void ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearMouseClicked
        // TODO add your handling code here:
        output.setText("");
        count = 0;
        current = max_packets ;
        option = false;
        packets.clear();
    }//GEN-LAST:event_ClearMouseClicked

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        // TODO add your handling code here:
        //HTTP
        if (jRadioButton1.isSelected()){
            try {
                cap.setFilter("port 80", true);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try {
                cap.setFilter("port 80", false);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        // TODO add your handling code here:
        //HTTP SSL
        if (jRadioButton3.isSelected()){
            try {
                cap.setFilter("port 443", true);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try {
                cap.setFilter("port 443", false);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        // TODO add your handling code here:
        //DNS
        if (jRadioButton2.isSelected()){
            try {
                cap.setFilter("port 53", true);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try {
                cap.setFilter("port 53", false);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void jRadioButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton4MouseClicked
        // TODO add your handling code here:
        //FTP both
        if (jRadioButton4.isSelected()){
            try {
                
                cap.setFilter("port 21", true);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try {
                cap.setFilter("port 20", false);
                cap.setFilter("port 21", false);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton4MouseClicked

    private void jRadioButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton5MouseClicked
        // TODO add your handling code here:
        //VOIP
        if (jRadioButton5.isSelected()){
            try {
                cap.setFilter("port 5060", true);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try {
                cap.setFilter("port 5060", false);
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton5MouseClicked

    private void ApplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApplyMouseClicked
        // TODO add your handling code here:
        if (filter.getText().equals("")){
            
        } else{
            try {
                
                String text = filter.getText();
                
                cap.setFilter(text, true);
                filter.setText("");
            } catch (IOException ex) {
                Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ApplyMouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        current = max_packets = Integer.parseInt(jTextField1.getText());
        System.out.println(max_packets);
        count = 0;
    }//GEN-LAST:event_jButton2MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int index =Integer.parseInt(jTextField2.getText());
        String result = "";
        if(index-1>=0 && index -1<packets.size()){
            if(packets.get(index)  instanceof UDPPacket){
                UDPPacket pac = (UDPPacket)packets.get(index-1);
                result =udpPacketExtraction(pac);
            }
            if(packets.get(index-1)  instanceof TCPPacket){
                TCPPacket pac = (TCPPacket)packets.get(index-1);
                result =TCPPacketExtraction(pac);
            }
            new SinglePacketFrame(result).setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        new Interface().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JpcapCaptor captor = null;
        try {
            captor=JpcapCaptor.openDevice(networkInterfaces[4], 65535, false, 20);
            JpcapWriter writer;
            writer = JpcapWriter.openDumpFile(captor,"save_file.pcap");
            for(int i = 0;i<packets.size();i++){
                writer.writePacket(packets.get(i));
            }
            captor.close();
            //writer.close();
        } catch (IOException ex) {
            Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            JpcapCaptor captor=JpcapCaptor.openFile("save_file.pcap");
            int count2 =1;
            output.setText("");
            packets.clear();
            while(true){
                //read a packet from the opened file
                Packet packet=captor.getPacket();
                //if some error occurred or EOF has reached, break the loop
                if(packet==null || packet==Packet.EOF) break;
                //otherwise, print out the packet
                packets.add(packet);
                output.append("Packet No : "+Integer.toString(count2)
                                +"  "+packet.toString()+"\n");
                count2++;
            }
            captor.close();
        } catch (IOException ex) {
            Logger.getLogger(PacketLive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PacketLive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PacketLive().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Apply;
    private javax.swing.JButton Capture;
    private javax.swing.JButton Clear;
    private javax.swing.JPanel PacketLive;
    private javax.swing.JButton Pause;
    private javax.swing.JTextField filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
  
}